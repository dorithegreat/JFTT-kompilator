    lex.py: 924:lex: tokens   = ('LBR', 'RBR', 'LPAR', 'RPAR', 'FOR', 'FROM', 'TO', 'DOWNTO', 'ENDFOR', 'PROCEDURE', 'IS', 'BEGIN', 'END', 'PROGRAM', 'IF', 'THEN', 'ELSE', 'ENDIF', 'WHILE', 'DO', 'ENDWHILE', 'REPEAT', 'UNTIL', 'READ', 'WRITE', 'PID', 'NUM', 'T', 'ADD', 'SUB', 'MUL', 'DIV', 'MOD', 'EQ', 'NEQ', 'GT', 'LT', 'GEQ', 'LEQ', 'COM', 'ASSIGN', 'SEMICOLON', 'COMMA')
    lex.py: 925:lex: literals = ':'
    lex.py: 926:lex: states   = {'INITIAL': 'inclusive'}
    lex.py: 953:lex: Adding rule t_NUM -> '[0-9]+' (state 'INITIAL')
    lex.py: 953:lex: Adding rule t_newline -> '\n+' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_PROCEDURE -> 'PROCEDURE' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_ENDWHILE -> 'ENDWHILE' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_PROGRAM -> 'PROGRAM' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_PID -> '[_a-z]+' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_DOWNTO -> 'DOWNTO' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_ENDFOR -> 'ENDFOR' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_REPEAT -> 'REPEAT' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_BEGIN -> 'BEGIN' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_ENDIF -> 'ENDIF' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_WHILE -> 'WHILE' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_UNTIL -> 'UNTIL' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_WRITE -> 'WRITE' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_FROM -> 'FROM' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_THEN -> 'THEN' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_ELSE -> 'ELSE' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_READ -> 'READ' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_ignore_COMMENT -> '\#.*' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_ASSIGN -> '\:\=' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_FOR -> 'FOR' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_END -> 'END' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_NEQ -> '\!=' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_TO -> 'TO' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_IS -> 'IS' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_IF -> 'IF' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_DO -> 'DO' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_LBR -> '\[' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_RBR -> '\]' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_LPAR -> '\(' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_RPAR -> '\)' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_ADD -> '\+' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_MUL -> '\*' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_DIV -> '\/' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_MOD -> '\%' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_EQ -> '\=' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_GEQ -> '>=' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_LEQ -> '<=' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_SEMICOLON -> '\;' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_T -> 'T' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_SUB -> '-' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_LT -> '<' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_GT -> '>' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_COMMA -> ',' (state 'INITIAL')
    lex.py: 966:lex: ==== MASTER REGEXS FOLLOW ====
    lex.py: 975:lex: state 'INITIAL' : regex[0] = '(?P<t_NUM>[0-9]+)|(?P<t_newline>\n+)|(?P<t_PROCEDURE>PROCEDURE)|(?P<t_ENDWHILE>ENDWHILE)|(?P<t_PROGRAM>PROGRAM)|(?P<t_PID>[_a-z]+)|(?P<t_DOWNTO>DOWNTO)|(?P<t_ENDFOR>ENDFOR)|(?P<t_REPEAT>REPEAT)|(?P<t_BEGIN>BEGIN)|(?P<t_ENDIF>ENDIF)|(?P<t_WHILE>WHILE)|(?P<t_UNTIL>UNTIL)|(?P<t_WRITE>WRITE)|(?P<t_FROM>FROM)|(?P<t_THEN>THEN)|(?P<t_ELSE>ELSE)|(?P<t_READ>READ)|(?P<t_ignore_COMMENT>\#.*)|(?P<t_ASSIGN>\:\=)|(?P<t_FOR>FOR)|(?P<t_END>END)|(?P<t_NEQ>\!=)|(?P<t_TO>TO)|(?P<t_IS>IS)|(?P<t_IF>IF)|(?P<t_DO>DO)|(?P<t_LBR>\[)|(?P<t_RBR>\])|(?P<t_LPAR>\()|(?P<t_RPAR>\))|(?P<t_ADD>\+)|(?P<t_MUL>\*)|(?P<t_DIV>\/)|(?P<t_MOD>\%)|(?P<t_EQ>\=)|(?P<t_GEQ>>=)|(?P<t_LEQ><=)|(?P<t_SEMICOLON>\;)|(?P<t_T>T)|(?P<t_SUB>-)|(?P<t_LT><)|(?P<t_GT>>)|(?P<t_COMMA>,)'
   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 434:Stack  : . LexToken(PROGRAM,'PROGRAM',2,56)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 3
   yacc.py: 548:Result : <NoneType @ 0xa408a0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 434:Stack  : empty . LexToken(PROGRAM,'PROGRAM',2,56)
   yacc.py: 469:Action : Reduce rule [procedures -> empty] with [None] and goto state 2
   yacc.py: 506:Result : <Procedures @ 0x77d7ab5dbd70> (<nodes.Procedures object at 0x77d7ab5dbd ...)
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 434:Stack  : procedures . LexToken(PROGRAM,'PROGRAM',2,56)
   yacc.py: 445:Action : Shift and goto state 6
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 434:Stack  : procedures PROGRAM . LexToken(IS,'IS',2,64)
   yacc.py: 445:Action : Shift and goto state 9
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 434:Stack  : procedures PROGRAM IS . LexToken(PID,'a',3,68)
   yacc.py: 445:Action : Shift and goto state 14
   yacc.py: 410:
   yacc.py: 411:State  : 14
   yacc.py: 434:Stack  : procedures PROGRAM IS PID . LexToken(COMMA,',',3,69)
   yacc.py: 469:Action : Reduce rule [declarations -> PID] with ['a'] and goto state 12
   yacc.py: 506:Result : <Declarations @ 0x77d7ab5dbce0> (<nodes.Declarations object at 0x77d7ab5d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations . LexToken(COMMA,',',3,69)
   yacc.py: 445:Action : Shift and goto state 21
   yacc.py: 410:
   yacc.py: 411:State  : 21
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations COMMA . LexToken(PID,'b',3,70)
   yacc.py: 445:Action : Shift and goto state 40
   yacc.py: 410:
   yacc.py: 411:State  : 40
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations COMMA PID . LexToken(BEGIN,'BEGIN',4,72)
   yacc.py: 469:Action : Reduce rule [declarations -> declarations COMMA PID] with [<Declarations @ 0x77d7ab5dbce0>,',','b'] and goto state 12
   yacc.py: 506:Result : <Declarations @ 0x77d7ab5dbce0> (<nodes.Declarations object at 0x77d7ab5d ...)
   yacc.py: 410:
   yacc.py: 411:State  : 12
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations . LexToken(BEGIN,'BEGIN',4,72)
   yacc.py: 445:Action : Shift and goto state 20
   yacc.py: 410:
   yacc.py: 411:State  : 20
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN . LexToken(READ,'READ',5,80)
   yacc.py: 445:Action : Shift and goto state 31
   yacc.py: 410:
   yacc.py: 411:State  : 31
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN READ . LexToken(PID,'a',5,85)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN READ PID . LexToken(SEMICOLON,';',5,86)
   yacc.py: 469:Action : Reduce rule [identifier -> PID] with ['a'] and goto state 55
   yacc.py: 506:Result : <Identifier @ 0x77d7ab5dbdd0> (<nodes.Identifier object at 0x77d7ab5dbd ...)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN READ identifier . LexToken(SEMICOLON,';',5,86)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN READ identifier SEMICOLON . LexToken(READ,'READ',6,90)
   yacc.py: 469:Action : Reduce rule [command -> READ identifier SEMICOLON] with ['READ',<Identifier @ 0x77d7ab5dbdd0>,';'] and goto state 23
   yacc.py: 506:Result : <Read @ 0x77d7ab5fd9d0> (<nodes.Read object at 0x77d7ab5fd9d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN command . LexToken(READ,'READ',6,90)
   yacc.py: 469:Action : Reduce rule [commands -> command] with [<Read @ 0x77d7ab5fd9d0>] and goto state 39
   yacc.py: 506:Result : <Commands @ 0x77d7ab716f90> (<nodes.Commands object at 0x77d7ab716f90 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands . LexToken(READ,'READ',6,90)
   yacc.py: 445:Action : Shift and goto state 31
   yacc.py: 410:
   yacc.py: 411:State  : 31
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands READ . LexToken(PID,'b',6,95)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands READ PID . LexToken(SEMICOLON,';',6,96)
   yacc.py: 469:Action : Reduce rule [identifier -> PID] with ['b'] and goto state 55
   yacc.py: 506:Result : <Identifier @ 0x77d7ab5dbe90> (<nodes.Identifier object at 0x77d7ab5dbe ...)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands READ identifier . LexToken(SEMICOLON,';',6,96)
   yacc.py: 445:Action : Shift and goto state 80
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands READ identifier SEMICOLON . LexToken(FOR,'FOR',7,100)
   yacc.py: 469:Action : Reduce rule [command -> READ identifier SEMICOLON] with ['READ',<Identifier @ 0x77d7ab5dbe90>,';'] and goto state 42
   yacc.py: 506:Result : <Read @ 0x77d7ab5fda30> (<nodes.Read object at 0x77d7ab5fda30>)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands command . LexToken(FOR,'FOR',7,100)
   yacc.py: 469:Action : Reduce rule [commands -> commands command] with [<Commands @ 0x77d7ab716f90>,<Read @ 0x77d7ab5fda30>] and goto state 39
   yacc.py: 506:Result : <Commands @ 0x77d7ab716f90> (<nodes.Commands object at 0x77d7ab716f90 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands . LexToken(FOR,'FOR',7,100)
   yacc.py: 445:Action : Shift and goto state 28
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR . LexToken(PID,'i',7,104)
   yacc.py: 445:Action : Shift and goto state 51
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID . LexToken(FROM,'FROM',7,106)
   yacc.py: 445:Action : Shift and goto state 75
   yacc.py: 410:
   yacc.py: 411:State  : 75
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM . LexToken(PID,'a',7,111)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM PID . LexToken(TO,'TO',7,113)
   yacc.py: 469:Action : Reduce rule [identifier -> PID] with ['a'] and goto state 47
   yacc.py: 506:Result : <Identifier @ 0x77d7ab5fdac0> (<nodes.Identifier object at 0x77d7ab5fda ...)
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM identifier . LexToken(TO,'TO',7,113)
   yacc.py: 469:Action : Reduce rule [value -> identifier] with [<Identifier @ 0x77d7ab5fdac0>] and goto state 101
   yacc.py: 506:Result : <Identifier @ 0x77d7ab5fdac0> (<nodes.Identifier object at 0x77d7ab5fda ...)
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM value . LexToken(TO,'TO',7,113)
   yacc.py: 445:Action : Shift and goto state 117
   yacc.py: 410:
   yacc.py: 411:State  : 117
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM value TO . LexToken(PID,'b',7,116)
   yacc.py: 445:Action : Shift and goto state 48
   yacc.py: 410:
   yacc.py: 411:State  : 48
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM value TO PID . LexToken(DO,'DO',7,118)
   yacc.py: 469:Action : Reduce rule [identifier -> PID] with ['b'] and goto state 47
   yacc.py: 506:Result : <Identifier @ 0x77d7ab5dbfb0> (<nodes.Identifier object at 0x77d7ab5dbf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 47
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM value TO identifier . LexToken(DO,'DO',7,118)
   yacc.py: 469:Action : Reduce rule [value -> identifier] with [<Identifier @ 0x77d7ab5dbfb0>] and goto state 123
   yacc.py: 506:Result : <Identifier @ 0x77d7ab5dbfb0> (<nodes.Identifier object at 0x77d7ab5dbf ...)
   yacc.py: 410:
   yacc.py: 411:State  : 123
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM value TO value . LexToken(DO,'DO',7,118)
   yacc.py: 445:Action : Shift and goto state 127
   yacc.py: 410:
   yacc.py: 411:State  : 127
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM value TO value DO . LexToken(PID,'i',8,125)
   yacc.py: 445:Action : Shift and goto state 29
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM value TO value DO PID . LexToken(ASSIGN,':=',8,126)
   yacc.py: 469:Action : Reduce rule [identifier -> PID] with ['i'] and goto state 24
   yacc.py: 506:Result : <Identifier @ 0x77d7ab5fc0e0> (<nodes.Identifier object at 0x77d7ab5fc0 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 24
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM value TO value DO identifier . LexToken(ASSIGN,':=',8,126)
   yacc.py: 445:Action : Shift and goto state 43
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM value TO value DO identifier ASSIGN . LexToken(NUM,1,8,128)
   yacc.py: 445:Action : Shift and goto state 46
   yacc.py: 410:
   yacc.py: 411:State  : 46
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM value TO value DO identifier ASSIGN NUM . LexToken(SEMICOLON,';',8,129)
   yacc.py: 469:Action : Reduce rule [value -> NUM] with [1] and goto state 65
   yacc.py: 506:Result : <int @ 0xb369a8> (1)
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM value TO value DO identifier ASSIGN value . LexToken(SEMICOLON,';',8,129)
   yacc.py: 469:Action : Reduce rule [expression -> value] with [1] and goto state 64
   yacc.py: 506:Result : <Expression @ 0x77d7ab5fc380> (<nodes.Expression object at 0x77d7ab5fc3 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM value TO value DO identifier ASSIGN expression . LexToken(SEMICOLON,';',8,129)
   yacc.py: 445:Action : Shift and goto state 86
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM value TO value DO identifier ASSIGN expression SEMICOLON . LexToken(ENDFOR,'ENDFOR',9,133)
   yacc.py: 469:Action : Reduce rule [command -> identifier ASSIGN expression SEMICOLON] with [<Identifier @ 0x77d7ab5fc0e0>,':=',<Expression @ 0x77d7ab5fc380>,';'] and goto state 23
   yacc.py: 506:Result : <Assign @ 0x77d7ab5fc2c0> (<nodes.Assign object at 0x77d7ab5fc2c0>)
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM value TO value DO command . LexToken(ENDFOR,'ENDFOR',9,133)
   yacc.py: 469:Action : Reduce rule [commands -> command] with [<Assign @ 0x77d7ab5fc2c0>] and goto state 129
   yacc.py: 506:Result : <Commands @ 0x77d7ab5fc410> (<nodes.Commands object at 0x77d7ab5fc410 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM value TO value DO commands . LexToken(ENDFOR,'ENDFOR',9,133)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands FOR PID FROM value TO value DO commands ENDFOR . LexToken(END,'END',10,140)
   yacc.py: 469:Action : Reduce rule [command -> FOR PID FROM value TO value DO commands ENDFOR] with ['FOR','i','FROM',<Identifier @ 0x77d7ab5fdac0>,'TO',<Identifier @ 0x77d7ab5dbfb0>,'DO',<Commands @ 0x77d7ab5fc410>,'ENDFOR'] and goto state 42
   yacc.py: 506:Result : <ForTo @ 0x77d7ab5fc3b0> (<nodes.ForTo object at 0x77d7ab5fc3b0>)
   yacc.py: 410:
   yacc.py: 411:State  : 42
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands command . LexToken(END,'END',10,140)
   yacc.py: 469:Action : Reduce rule [commands -> commands command] with [<Commands @ 0x77d7ab716f90>,<ForTo @ 0x77d7ab5fc3b0>] and goto state 39
   yacc.py: 506:Result : <Commands @ 0x77d7ab716f90> (<nodes.Commands object at 0x77d7ab716f90 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands . LexToken(END,'END',10,140)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 430:Defaulted state 62: Reduce using 5
   yacc.py: 434:Stack  : procedures PROGRAM IS declarations BEGIN commands END . None
   yacc.py: 469:Action : Reduce rule [main -> PROGRAM IS declarations BEGIN commands END] with ['PROGRAM','IS',<Declarations @ 0x77d7ab5dbce0>,'BEGIN',<Commands @ 0x77d7ab716f90>,'END'] and goto state 4
   yacc.py: 506:Result : <Main @ 0x77d7ab5fdaf0> (<nodes.Main object at 0x77d7ab5fdaf0>)
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 430:Defaulted state 4: Reduce using 1
   yacc.py: 434:Stack  : procedures main . None
   yacc.py: 469:Action : Reduce rule [program_all -> procedures main] with [<Procedures @ 0x77d7ab5dbd70>,<Main @ 0x77d7ab5fdaf0>] and goto state 1
   yacc.py: 506:Result : <Program @ 0x77d7ab5dbcb0> (<nodes.Program object at 0x77d7ab5dbcb0>)
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 434:Stack  : program_all . $end
   yacc.py: 571:Done   : Returning <Program @ 0x77d7ab5dbcb0> (<nodes.Program object at 0x77d7ab5dbcb0>)
   yacc.py: 572:PLY: PARSE DEBUG END
